networks:
  test-task:
    name: test-task

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
    restart: always
    networks:
      - test-task

  db:
    image: postgres:latest
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=website-test
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/database-init.sh:/docker-entrypoint-initdb.d/init.sh  
    restart: always
    networks:
      - test-task

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env  
    ports:
      - "3002:3000"
    environment:
      PORT: 3000
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules 
      - /frontend/.next 
    restart: always  
    networks:
      - test-task

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always
    networks:
      - test-task

  website-monitor:
    build:
      context: ./website-monitor-service
      dockerfile: Dockerfile
    env_file:
      - ./website-monitor-service/.env
    volumes:
      - ./website-monitor-service:/website-monitor-service
      - /website-monitor-service/node_modules  
    depends_on:
      - redis
      - db
    restart: always
    networks:
      - test-task

volumes:
  postgres-data:
